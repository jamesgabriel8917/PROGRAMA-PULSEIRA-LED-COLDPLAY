/**********************************************************************************

** PROGRAMA SIMPLES PARA CONTROLE DE PULSEIRA LED
********************************************************************************/
#include <Arduino.h> // Carrega Bibliotecas
#include <IRremote.hpp>
// Variáveis do programa
const uint16_t pin_IR_LED = 3; // numero do pino para ligar o transmissor IR
int tamanho; // variavel para guardar o numero de bytes referente a cor enviada para a pulseira, nessesário para a função IRSender


// Matriz de cores que será enviada para a pulseira
uint16_t cores[23][30] = {
{1400, 1400, 700, 700, 700, 1400, 700, 2800, 700, 2800, 700, 700, 700, 700, 700, 1400, 1400, 2800, 1400, 2800, 700},
{700, 700, 700, 700, 1400, 1400, 1400, 2800, 700, 1400, 700, 1400, 700, 1400, 700, 2100, 1400, 2100, 1400, 2800, 700},
{700, 700, 700, 2100, 1400, 1400, 700, 2100, 700, 1400, 700, 700, 700, 1400, 1400, 700, 700, 1400, 700, 700, 700, 700, 700, 700, 700, 2100, 700},
{1400, 1400, 700, 700, 700, 1400, 700, 2800, 700, 2800, 700, 700, 700, 700, 700, 1400, 1400, 2800, 1400, 2800, 700},
{700, 700, 700, 700, 1400, 1400, 1400, 2800, 700, 1400, 700, 1400, 700, 1400, 700, 2100, 1400, 2100, 1400, 2800, 700},
{700, 700, 700, 2100, 1400, 1400, 700, 2100, 700, 1400, 700, 700, 700, 1400, 1400, 700, 700, 1400, 700, 700, 700, 700, 700, 700, 700, 2100, 700},
 {1400, 1400, 700, 700, 700, 1400, 700, 2800, 700, 2100, 1400, 700, 700, 700, 700, 1400, 1400, 2800, 1400, 2800, 700},
 {1400, 1400, 700, 700, 700, 2100, 700, 2100, 700, 2100, 1400, 700, 700, 700, 700, 1400, 1400, 2800, 1400, 2800, 700},
{1400, 1400, 700, 700, 700, 2100, 700, 2100, 700, 2800, 700, 700, 700, 700, 700, 1400, 1400, 2800, 1400, 2800, 700},
 {1400, 1400, 700, 700, 700, 1400, 700, 2800, 700, 2800, 700, 700, 700, 700, 700, 1400, 1400, 2800, 1400, 2800, 700},
 {1400, 1400, 700, 700, 700, 2100, 700, 2100, 700, 2100, 1400, 700, 700, 700, 700, 1400, 1400, 2800, 1400, 2800, 700},
{700, 700, 700, 2100, 1400, 700, 700, 2800, 700, 1400, 700, 700, 700, 1400, 1400, 700, 700, 1400, 700, 700, 700, 700, 1400, 2800, 700},
{700, 700, 700, 2100, 1400, 1400, 700, 2100, 700, 1400, 700, 700, 700, 1400, 1400, 700, 700, 1400, 700, 700, 700, 700, 1400, 2800, 700},
{1400, 1400, 700, 700, 700, 700, 700, 700, 700, 2100, 700, 1400, 700, 1400, 700, 1400, 700, 1400, 1400, 2800, 1400, 2800, 700},
{700, 700, 700, 700, 1400, 1400, 1400, 2800, 700, 1400, 700, 1400, 700, 1400, 700, 2100, 1400, 2100, 1400, 2800, 700},
{700, 700, 700, 700, 1400, 1400, 1400, 2800, 700, 1400, 700, 1400, 700, 1400, 700, 1400, 700, 700, 700, 2100, 1400, 2800, 700},
 {700, 700, 700, 700, 1400, 1400, 1400, 2800, 700, 1400, 700, 1400, 700, 1400, 700, 700, 700, 1400, 700, 2100, 1400, 2800, 700},
 {700, 700, 700, 2100, 700, 700, 700, 700, 700, 1400, 1400, 700, 700, 1400, 700, 700, 1400, 1400, 700, 700, 700, 2800, 1400, 2800, 700},
{1400, 1400, 700, 700, 700, 2100, 700, 2100, 700, 1400, 700, 700, 700, 700, 700, 700, 700, 2100, 700, 2800, 1400, 2800, 700},
{1400, 1400, 700, 700, 700, 1400, 700, 700, 700, 700, 1400, 2800, 700, 2100, 700, 2100, 700, 2800, 1400, 2800, 700},
{1400, 1400, 700, 700, 700, 1400, 700, 700, 700, 700, 1400, 1400, 700, 700, 700, 2100, 700, 2100, 700, 2800, 1400, 2800, 700},
{1400, 2800, 700, 700, 1400, 700, 700, 700, 1400, 1400, 700, 1400, 700, 1400, 700, 1400, 700, 700, 700, 2100, 1400, 2800, 700},
{700, 700, 700, 700, 1400, 1400, 1400, 2800, 700, 1400, 700, 700, 1400, 1400, 700, 1400, 1400, 2800, 1400, 2800, 700}
};

void setup() { // ajusta as configuraçãoes iniciais
IrSender.begin(pin_IR_LED); // Inicializa o pino do Arduino que enviará os dados
IrSender.enableIROut(38); // Define a frequencia da portadora do sinal IR
} // fim das configuraçoes iniciais

void loop() { // loop de execução do programa principal

// pisca LEDs com as cores armazenadas na matriz
for (int i = 0; i < 23; i++) {
tamanho = sizeof cores[i] / sizeof *cores[i]; // conta quantos bytes serão enviados da cor atual
IrSender.sendRaw(cores[i], tamanho, 38); // envia os dados para o tranmissor IR
delay(100); // Pausa 500 mili segundos
}

} // retorna para repetir o programa, loop.